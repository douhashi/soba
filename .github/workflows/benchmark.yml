name: Benchmark

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:
    inputs:
      comparison:
        description: 'Compare with previous results'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: read
  pull-requests: write

jobs:
  benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run benchmarks
        run: |
          go test -bench=. -benchmem -benchtime=10s -count=5 -cpu=1,2,4 ./... | tee benchmark_results.txt

      - name: Parse benchmark results
        id: benchmark
        run: |
          echo "## Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat benchmark_results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Store benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          tool: 'go'
          output-file-path: benchmark_results.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          alert-threshold: '150%'
          comment-on-alert: true
          fail-on-alert: false
          alert-comment-cc-users: '@maintainers'

      - name: Compare with base branch
        if: github.event_name == 'pull_request'
        run: |
          echo "Fetching base branch benchmarks..."
          git checkout ${{ github.event.pull_request.base.sha }}
          go test -bench=. -benchmem -benchtime=10s -count=5 -cpu=1,2,4 ./... | tee base_benchmark.txt

          git checkout ${{ github.event.pull_request.head.sha }}

          if command -v benchstat > /dev/null 2>&1; then
            benchstat base_benchmark.txt benchmark_results.txt | tee comparison.txt
            echo "## Benchmark Comparison" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat comparison.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            go install golang.org/x/perf/cmd/benchstat@latest
            $(go env GOPATH)/bin/benchstat base_benchmark.txt benchmark_results.txt | tee comparison.txt
            echo "## Benchmark Comparison" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat comparison.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## ðŸ“Š Benchmark Results\n\n';

            if (fs.existsSync('comparison.txt')) {
              const comparison = fs.readFileSync('comparison.txt', 'utf8');
              comment += '### Comparison with base branch\n';
              comment += '```\n' + comparison + '\n```\n';
            }

            const results = fs.readFileSync('benchmark_results.txt', 'utf8');
            comment += '\n### Current branch results\n';
            comment += '<details>\n<summary>Click to expand</summary>\n\n';
            comment += '```\n' + results + '\n```\n';
            comment += '</details>';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  profile:
    name: CPU and Memory Profiling
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[profile]'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: |
          go mod download
          go install github.com/google/pprof@latest

      - name: Run CPU profiling
        run: |
          go test -cpuprofile=cpu.prof -bench=. -benchtime=30s ./...
          go tool pprof -top cpu.prof | head -20 > cpu_top.txt
          go tool pprof -svg cpu.prof > cpu_profile.svg

      - name: Run Memory profiling
        run: |
          go test -memprofile=mem.prof -bench=. -benchtime=30s ./...
          go tool pprof -top mem.prof | head -20 > mem_top.txt
          go tool pprof -svg mem.prof > mem_profile.svg

      - name: Upload profiles
        uses: actions/upload-artifact@v4
        with:
          name: performance-profiles
          path: |
            *.prof
            *.svg
            *_top.txt
          retention-days: 30

      - name: Add profile summary
        run: |
          echo "## Performance Profile Summary" >> $GITHUB_STEP_SUMMARY
          echo "### Top CPU consumers" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat cpu_top.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "### Top Memory consumers" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat mem_top.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY